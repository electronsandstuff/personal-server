version: "3.9"

services:
  influxdb:
    image: influxdb:latest
    ports:
      - '8086:8086'
    volumes:
      - influxdb-storage:/var/lib/influxdb2
      - influxdb-storage-etc:/etc/influxdb2

  grafana:
    image: grafana/grafana:latest
    volumes:
      - grafana-storage:/var/lib/grafana
      - ./grafana-provisioning/:/etc/grafana/provisioning
    depends_on:
      - influxdb
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_USERNAME}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD}

  plex-match:
    image: lukechannings/moviematch
    environment:
      - PLEX_URL=${PLEX_URL}
      - PLEX_TOKEN=${PLEX_TOKEN}
      - ROOT_PATH=/match
            
  nginx:
    image: nginx:latest
    depends_on:
      - plex-match
      - grafana
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./nginx/deploy.cfg:/etc/nginx/conf.d/default.conf
      - ./certbot_data/conf:/etc/letsencrypt
      - ./certbot_data/www:/var/www/certbot
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
    
  certbot:
    image: certbot/certbot
    volumes:
      - ./certbot_data/conf:/etc/letsencrypt
      - ./certbot_data/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

  telegraf:
    image: telegraf
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "./telegraf.conf:/etc/telegraf/telegraf.conf:ro"
      - "/:/hostfs:ro"
    environment:
      HOST_ETC: /hostfs/etc
      HOST_PROC: /hostfs/proc
      HOST_SYS: /hostfs/sys
      HOST_VAR: /hostfs/var
      HOST_RUN: /hostfs/run
      HOST_MOUNT_PREFIX: /hostfs
      INFLUX_URL: ${INFLUX_URL}
      INFLUX_DB: ${INFLUX_DB}
      INFLUX_USER: ${INFLUX_USER}
      INFLUX_PASSWORD: ${INFLUX_PASSWORD}

      
volumes:
  grafana-storage:
  influxdb-storage:
  letsencrypt_certs:
  certbot_acme_challenge:
  influxdb-storage-etc: